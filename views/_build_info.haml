%h1&= build.human_status

- @build = build

%form{ :action => build_path(build), :method => :post }
  %p.submit
    %button{ :type => :submit, :title => "Rebuild this commit" }<
      Rebuild

%blockquote
  %p
    #{h(build.full_message).gsub("\n", '<br />')}
  %p.meta<
    %span.who<
      &== by: #{build.author}
    |
    %span.when{ :title => build.committed_at }<
      &= pretty_date build.committed_at
    - if build.project.github?
      |
      %span.github<
        %a{ :href => github_commit_url(build) } view on GitHub

- if build.completed?
  - if build.successful? && ! current_project.artifacts_empty?
    %h2
      Artifacts
      %blockquote
        %ul#artifacts
          - if ! current_project.artifacts_empty?
            - current_project.get_artifacts.each do |artifact|
              - if File.exists?("#{Integrity.config.directory}/#{@build.id}/#{artifact}") && ! artifact.include?("*")
                - if artifact.include? "/"
                  - artifact_url = artifact.gsub(/(\/)/, "~")
                - else
                  - artifact_url = artifact
                %a{ :title => "#{artifact}",
                    :href => "#{root_url}artifacts/#{current_project.name.downcase}/#{@build.id}/#{artifact_url}" } #{File.basename(artifact)}
                %br/
              - elsif (File.exists?("#{Integrity.config.directory}/#{@build.id}/#{artifact}") && artifact.include?("*")) || artifact.include?("*")
                - Dir["#{Integrity.config.directory}/#{@build.id}/#{artifact}"].each do |wildcarded|
                  - wildcarded = wildcarded.split("#{Integrity.config.directory}/#{@build.id}/")[1]
                  - if wildcarded.include? "/"
                    - wildcard_url = wildcarded.gsub(/(\/)/, "~")
                  - else
                    - wildcard_url = wildcarded
                  %a{ :title => "#{File.basename(wildcarded)}",
                      :href => "#{root_url}artifacts/#{current_project.name.downcase}/#{@build.id}/#{wildcard_url}" } #{File.basename(wildcarded)}
                  %br/

  %h2
    Build Output
    %a{:href => build_path(build, :raw)} (raw)
  
  %pre.output
    :preserve
      #{bash_color_codes h(build.output)}
